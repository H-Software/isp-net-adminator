name: checks-A3

on:
  push:
    branches:
      - master
  pull_request:

defaults:
 run:
  working-directory: ./adminator3

permissions:
  pull-requests: write
  checks: write

jobs:
  basic-checks:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        php-versions: ['8.2']

    name: Test on ${{ matrix.os }} with PHP ${{ matrix.php-versions }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: none

      - name: Print PHP version
        run: php -v

      # - name: Cache Composer dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: ./vendor
      #     key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        run: composer install --ignore-platform-reqs

      # - name: PHP CodeSniffer
      #   id: phpcs
      #   continue-on-error: true
      #   run: |
      #     composer \
      #     run \
      #       phpcs \
      #         -- \
      #         --standard=PSR12 \
      #         app \
      #         boostrap \
      #         print \
      #         rss
      
      # - uses: mainmatter/continue-on-error-comment@v1
      #   with:
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     outcome: ${{ steps.phpcs.outcome }}
      #     test-id: Step Php-CS Failed on OS ${{ matrix.os }} and PHP ${{ matrix.php-versions }}

      # - name: PHP CodeSniffer Fix
      #   run: |
      #     composer \
      #       run \
      #         phpcbf \
      #           -- \
      #           --standard=PSR12 \
      #           boostrap \
      #           config \
      #           resources \
      #           templates \
      #           app

      - name: PHP-CS-Fixer
        run: |
          php \
          vendor/friendsofphp/php-cs-fixer/php-cs-fixer \
          check \
          --show-progress=dots \
          -v

      - name: phpstan
        if: always()
        run: |
          cd ../ && \
          make \
            run-a3-phpstan

      - name: Run the tests
        if: always()
        run: composer run test

      # - name: check junit report
      #   if: always()
      #   run: ls -lh build

      - name: JUnit Report Action
        if: always()
        uses: mikepenz/action-junit-report@v4
        with:
          detailed_summary: true
          report_paths: 'adminator3/build/report.*.xml'
      
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: "Test Results for OS: ${{ matrix.os }} and PHP ${{ matrix.php-versions }}"
          files: |
            adminator3/build/report.*.xml

      # - name: Test Report
      #   uses: dorny/test-reporter@v1
      #   if: success() || failure()    # run this step even if previous step failed
      #   with:
      #     name: PHPUnit Tests            # Name of the check run which will be created
      #     path: adminator3/build/report.*.xml    # Path to test results
      #     reporter: java-junit        # Format of test results
